tinymce.PluginManager.add("visualblocks",function(o,l){function e(){var e=this;e.active(a),o.on("VisualBlocks",function(){e.active(o.dom.hasClass(o.getBody(),"mce-visualblocks"))})}var t,a;window.NodeList&&(o.addCommand("mceVisualBlocks",function(){var e,s=o.dom;t||(t=s.uniqueId(),e=s.create("link",{id:t,rel:"stylesheet",href:l+"/css/visualblocks.css"}),o.getDoc().getElementsByTagName("head")[0].appendChild(e)),o.on("PreviewFormats AfterPreviewFormats",function(e){a&&s.toggleClass(o.getBody(),"mce-visualblocks","afterpreviewformats"==e.type)}),s.toggleClass(o.getBody(),"mce-visualblocks"),a=o.dom.hasClass(o.getBody(),"mce-visualblocks"),o.fire("VisualBlocks")}),o.addButton("visualblocks",{title:"Show blocks",cmd:"mceVisualBlocks",onPostRender:e}),o.addMenuItem("visualblocks",{text:"Show blocks",cmd:"mceVisualBlocks",onPostRender:e,selectable:!0,context:"view",prependToContext:!0}),o.on("init",function(){o.settings.visualblocks_default_state&&o.execCommand("mceVisualBlocks",!1,null,{skip_focus:!0})}),o.on("remove",function(){o.dom.removeClass(o.getBody(),"mce-visualblocks")}))});