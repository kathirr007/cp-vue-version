var wd=require("wd"),http=require("http"),https=require("https"),url=require("url"),path=require("path"),Promise=require("bluebird"),_=require("lodash"),humanizeDuration=require("humanize-duration"),utils=require("../utils"),colors=utils.colors,port=8080;function runTestWithRetries(e,r,t){return t=t||0,runTest(e,r).timeout(3e4).catch(Promise.TimeoutError,function(){if(t<3)return console.log(colors.violet,"Retry",t+1,r),runTestWithRetries(e,r,t+1);throw new Error("Couldn't run test after 3 retries")})}function getResults(r){return function(){return Promise.props({dataUrl:r.waitForElementByCss("body[data-complete='true']",9e4).then(function(){return r.elementsByCssSelector(".test.fail")}).then(function(e){return Array.isArray(e)?Promise.map(e,function(e){return r.text(e).then(function(e){return Promise.reject(e)})}):Promise.resolve([])})})}}function runTest(e,r){return Promise.resolve(e.then(utils.loadTestPage(e,r,port)).then(getResults(e))).cancellable()}exports.tests=function(e,r){return(r?Promise.resolve([r]):utils.getTests("tests/mocha")).then(function(r){return Promise.map(e,function(e){var n=[e.browserName,e.version,e.platform].join("-"),s=0,u=utils.initBrowser(e);return Promise.using(u,function(){return Promise.map(r,function(e,r,t){console.log(colors.green,"STARTING","("+ ++s+"/"+t+")",n,e,colors.clear);var o=Date.now();return runTestWithRetries(u,e).then(function(){console.log(colors.green,"COMPLETE",humanizeDuration(Date.now()-o),"("+s+"/"+t+")",n,colors.clear)})},{concurrency:1}).settle().catch(function(e){throw console.error(colors.red,"ERROR",n,e),e})})},{concurrency:3})})};